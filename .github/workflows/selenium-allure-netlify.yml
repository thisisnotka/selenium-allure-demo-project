name: Run Selenium tests and deploy Allure Report to Netlify

on:
  workflow_dispatch:

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    env:
      ALLURE_VERSION: curl -s https://api.github.com/repos/allure-framework/allure2/releases/latest | jq -r '.tag_name'
      CHROMEDRIVER_VERSION: curl -s https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions.json | jq -r '.channels.Stable.version'
      ALLURE_HISTORY_ZIP: history.zip
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'

    - name: Install Xvfb
      run: sudo apt-get install -y xvfb ffmpeg

    - name: Run Xvfb
      run: Xvfb :99 -ac -screen 0 1920x1080x24 &

    - name: Set virtual display
      run: echo "DISPLAY=:99" >> $GITHUB_ENV

    - name: Install ChromeDriver
      run: |
        wget https://storage.googleapis.com/chrome-for-testing-public/${CHROMEDRIVER_VERSION}/linux64/chromedriver-linux64.zip
        unzip chromedriver-linux64.zip
        cd chromedriver-linux64
        sudo mv chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver

    - name: Install Allure
      run: |
        wget https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.zip
        unzip allure-${ALLURE_VERSION}.zip
        sudo mv allure-${ALLURE_VERSION} /opt/allure
        sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure

    - name: Run Selenium tests
      run: mvn test -DbrowserType=chrome-headless

    - name: Check if Allure history.zip exists on Netlify
      id: check-history-zip
      run: |
        HISTORY_ZIP_URL="https://api.netlify.com/api/v1/sites/${NETLIFY_SITE_ID}/files/${ALLURE_HISTORY_ZIP}"
        echo "Checking URL: $HISTORY_ZIP_URL"
        HTTP_STATUS=$(curl -o /dev/null -s -w "%{http_code}" -H "Authorization: Bearer ${NETLIFY_AUTH_TOKEN}" "${HISTORY_ZIP_URL}")
        if [ "$HTTP_STATUS" -eq 200 ]; then
          echo "History zip file exists on Netlify."
          echo "history_zip_exists=true" >> $GITHUB_ENV
        else
          echo "No history zip file found on Netlify."
          echo "history_zip_exists=false" >> $GITHUB_ENV
        fi

    - name: Download and unzip Allure history.zip
      if: env.history_zip_exists == 'true'
      run: |
        HISTORY_ZIP_URL="https://generated-allure-reports.netlify.app/${ALLURE_HISTORY_ZIP}"
        curl -L -H "Authorization: Bearer ${NETLIFY_AUTH_TOKEN}" -o ${ALLURE_HISTORY_ZIP} "${HISTORY_ZIP_URL}"
        unzip ${ALLURE_HISTORY_ZIP} -d allure-results

    - name: Generate Allure report
      run: |
        allure generate allure-results --clean -o allure-report

    - name: Zip Allure history folder
      run: |
        cd allure-report
        zip -r ${ALLURE_HISTORY_ZIP} history

    - name: Upload Allure history zip to Netlify
      run: |
        curl -X POST -H "Authorization: Bearer ${NETLIFY_AUTH_TOKEN}" \
        --data-binary "@allure-report/${ALLURE_HISTORY_ZIP}" \
        "https://api.netlify.com/api/v1/sites/${NETLIFY_SITE_ID}/files/${ALLURE_HISTORY_ZIP}"

    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v3
      with:
        publish-dir: ./allure-report
        production-deploy: true
        deploy-message: "Deploying Allure Report"
        netlify-auth-token: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        netlify-site-id: ${{ secrets.NETLIFY_SITE_ID }}
