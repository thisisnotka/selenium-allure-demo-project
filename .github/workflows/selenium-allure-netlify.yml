name: Run Selenium Tests and Deploy Allure Report

on:
  workflow_dispatch:

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    env:
      ALLURE_VERSION: 2.30.0
      ALLURE_HISTORY_ZIP: history.zip
      CHROMEDRIVER_VERSION: 128.0.6613.137
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Set up Java JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'

    - name: Install Xvfb
      run: sudo apt-get install -y xvfb ffmpeg

    - name: Run Xvfb
      run: Xvfb :99 -ac -screen 0 1920x1080x24 &

    - name: Set virtual display
      run: echo "DISPLAY=:99" >> $GITHUB_ENV

    # Install Chrome
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo apt install ./google-chrome-stable_current_amd64.deb

    # Install ChromeDriver
    - name: Install ChromeDriver
      run: |
        wget https://storage.googleapis.com/chrome-for-testing-public/${CHROMEDRIVER_VERSION}/linux64/chromedriver-linux64.zip
        unzip chromedriver-linux64.zip
        cd chromedriver-linux64
        sudo mv chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver

    # Set up Allure
    - name: Install Allure
      run: |
        wget https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.zip
        unzip allure-${ALLURE_VERSION}.zip
        sudo mv allure-${ALLURE_VERSION} /opt/allure
        sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure
        allure --help

    # Run the tests
    - name: Run Selenium tests
      run: mvn test -DbrowserType=chrome-headless

    # Check if Allure history folder exists on Netlify
    - name: Check if Allure history exists on Netlify
      id: check-history
      run: |
        HISTORY_URL="https://api.netlify.com/api/v1/sites/${NETLIFY_SITE_ID}/files/"
        echo "Checking URL: $HISTORY_URL"
        response=$(curl -H "Authorization: Bearer ${NETLIFY_AUTH_TOKEN}" "${HISTORY_URL}")
        if echo "$response" | grep -q '"path": "/history/"'; then
          echo "History folder exists on Netlify."
          echo "history_exists=true" >> $GITHUB_ENV
        else
          echo "No history folder found on Netlify."
          echo "history_exists=false" >> $GITHUB_ENV
        fi

    # Download Allure history files if the folder exists
    - name: Download Allure history files from Netlify
      if: env.history_exists == 'true'
      run: |
        HISTORY_FILES_URL="https://api.netlify.com/api/v1/sites/${NETLIFY_SITE_ID}/files/"
        mkdir -p allure-results/history
        response=$(curl -H "Authorization: Bearer ${NETLIFY_AUTH_TOKEN}" "${HISTORY_FILES_URL}")
        echo "$response" | jq -r '.[] | select(.path | startswith("/history/")) | .path' | while read -r file; do
          file_url="https://api.netlify.com/api/v1/sites/${NETLIFY_SITE_ID}/files/${file}"
          curl -L -H "Authorization: Bearer ${NETLIFY_AUTH_TOKEN}" -o "allure-results/history/$(basename $file)" "${file_url}"
        done

    # Generate Allure report
    - name: Generate Allure report
      run: |
        allure generate allure-results --clean -o allure-report

    # Zip the Allure history folder
    - name: Zip Allure history folder
      run: |
        cd allure-report
        zip -r ${ALLURE_HISTORY_ZIP} history

    # Upload Allure history zip to Netlify
    - name: Upload Allure history zip to Netlify
      run: |
        curl -X POST -H "Authorization: Bearer ${NETLIFY_AUTH_TOKEN}" \
        --data-binary "@allure-report/${ALLURE_HISTORY_ZIP}" \
        "https://api.netlify.com/api/v1/sites/${NETLIFY_SITE_ID}/files/${ALLURE_HISTORY_ZIP}"

    # Deploy the Allure report to Netlify
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v1
      with:
        publish-dir: ./allure-report
        production-deploy: true
        deploy-message: "Deploying Allure Report"
        netlify-auth-token: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        netlify-site-id: ${{ secrets.NETLIFY_SITE_ID }}
